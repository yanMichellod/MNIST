# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events 
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: Test on python ${{ matrix.python-version }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false #avoid cancelled builds if the other fails
      matrix:
        python-version: ["3.8"]
            
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository code
        uses: actions/checkout@v2
    
      # Runs a single command using the runners shell
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: MNIST
          environment-file: envs/MNIST.yml
          
      - name: Build documentation
        shell: bash -l {0}
        run: |
          sphinx-build docs sphinx  #generates html version of docs
          touch sphinx/.nojekyll  #pages to be deployed are NOT a Jekyll site
          coverage html -d sphinx/coverage  #dump coverage report into doc tree

      - name: Deploy documentation to GitHub Pages
        if: ${{ matrix.python-version == '3.8' }}  #deploys only one variant
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: sphinx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Runs a set of commands using the runners shell
      - name: Run tests
        shell: bash -l {0}
        run: |
          conda info -a
          pytest Test/test_Database.py
    
        
